'use strict';import{Vec2,Shape}from"./geometry2d.mjs";class Point extends Shape{constructor(p){super();this.center=p.clone()}copyCenter(){return this.center.clone()}setCenter(center){this.center.set(center);return this}setCenterXY(x,y){this.center.setXY(x,y);return this}mirrorVertically(axisY=this.center.y){this.center.mirrorVertically(axisY);return this}mirrorHorizontally(axisX=this.center.x){this.center.mirrorHorizontally(axisX);return this}moveXY(dX,dY){this.center.addXY(dX,dY);return this}move(delta){this.center.add(delta);
return this}pushPath(context){context.rect(this.center.x-.5,this.center.y-.5,1,1)}draw(context,fill=true,stroke=!fill){context.fillRect(this.center.x-this.drawThickness,this.center.y-this.drawThickness,2*this.drawThickness,2*this.drawThickness)}getVertices(verticesArray,vOffset,indicesArray,iOffset){const o=offset/2;verticesArray[vOffset++]=this.center.x;verticesArray[vOffset++]=this.center.y;indicesArray[iOffset++]=o;indicesArray[iOffset++]=o;indicesArray[iOffset++]=o}clone(){return new Point(this.center)}}
Point.prototype.drawThickness=1;Point.prototype.glPointsNumber=1;Point.prototype.glPointsNumber=1;export default Point;export{Point};
