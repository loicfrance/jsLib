'use strict';class PeerConnection{constructor(pcConfig){this.pc=new RTCPeerConnection(pcConfig)}createDataChannel(name,config){return this.pc.createDataChannel(name||"",config)}addTrack(track,...streams){return this.pc.addTrack(track,...streams)}waitDataChannel(){return new Promise((resolve)=>{this.pc.ondatachannel=({channel})=>{this.pc.ondatachannel=null;resolve(channel)}})}waitTrack(){return new Promise((resolve)=>{this.pc.ontrack=(evt)=>{this.ontrack=null;resolve(evt)}})}createOffer(options){return new Promise((resolve,
reject)=>{this.pc.onicecandidate=(evt)=>{if(!evt.candidate)return;this.candidate=evt.candidate;resolve({description:this.pc.localDescription,candidate:this.candidate})};this.pc.createOffer(options).then((desc)=>{this.pc.setLocalDescription(desc)},reject)})}onOfferAnswer({candidate,description}){this.pc.setRemoteDescription(description);this.pc.addIceCandidate(candidate)}createAnswer({candidate,description},options){this.pc.setRemoteDescription(description);this.pc.addIceCandidate(candidate);return new Promise((resolve,
reject)=>{let a=false;this.pc.onicecandidate=(evt)=>{if(!evt.candidate)return;this.candidate=evt.candidate;resolve({description:this.pc.localDescription,candidate:this.candidate})};this.pc.createAnswer(options).then((desc)=>{this.pc.setLocalDescription(desc)},reject)})}}function test3(){var peer1=new PeerConnection;peer1.tx=peer1.createDataChannel("peer 1 -> 2");var peer2=new PeerConnection;peer2.tx=peer2.createDataChannel("peer 2 -> 1");const onMsg=function({data}){alert(`${this.label} >> ${data}`)};
peer1.createOffer().then((desc_cand)=>peer2.createAnswer(desc_cand)).then((desc_cand)=>peer1.onOfferAnswer(desc_cand)).then(()=>peer1.waitDataChannel()).then((channel)=>channel.onmessage=onMsg).then(()=>peer2.waitDataChannel()).then((channel)=>channel.onmessage=onMsg).then((_)=>console.log("finish")).then((_)=>peer1.tx.readyState=="open"||utils.tools.waitForEvent(peer1.tx,"open")).then(peer1.tx.send("Hello"))}export{PeerConnection};
