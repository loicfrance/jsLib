'use strict';import{LayoutGravity as G}from"./layout.mjs";function mix(superclass,...mixins){class C extends superclass{}let len=mixins.length,i=-1;while(++i<len)merge(C.prototype,mixins[i],true);return C}function merge(out,src,override=false){for(let p in src)if(src.hasOwnProperty(p)&&(override||!out.hasOwnProperty(p)))out[p]=src[p]}const loadString=(url)=>new Promise((resolve)=>{const client=new XMLHttpRequest;client.open("GET",url);client.onreadystatechange=()=>{if(client.readyState===4&&client.status===
200||client.status===0)resolve(client.responseText)};client.send()});const loadImage=(url)=>new Promise((resolve)=>{const img=new Image;img.onload=()=>resolve(img);img.src=url});function createScriptWorker(script){const url=URL.createObjectURL(new Blob([script],{type:"application/javascript"}));const worker=new Worker(url);URL.revokeObjectURL(url);return worker}function polyfill(container,name,vendors){for(let i=0;i<vendors.length&&!container[name];i++)container[name]=container[vendors[i]+name]||
container[vendors[i]+name[0].toUpperCase()+name.substr(1)]}function waitForEvent(object,event){const attr=`on${event}`;return new Promise((r)=>{const old=object[attr];object[attr]=(evt)=>{object[attr]=old;r(evt)}})}function delay(ms){return new Promise((r)=>setTimeout(r,ms))}function textFileUserDownload(text,fileName){let element=document.createElement("a");element.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(text));element.setAttribute("download",fileName);element.style.display=
"none";document.body.appendChild(element);element.click();document.body.removeChild(element)}function BBCodeToHTML(bbCode){let str=bbCode;str=str.replace(/\[b](.+?)\[\/b]/g,"<b>$1</b>");str=str.replace(/\[br\/]/g,"");str=str.replace(/\[br]/g,"");str=str.replace(/\[i](.+?)\[\/i]/g,"<i>$1</i>");str=str.replace(/\[u](.+?)\[\/u]/g,"<u>$1</u>");str=str.replace(/\[s](.+?)\[\/s]/g,"<s>$1</s>");str=str.replace(/\[code](.+?)\[\/code]/g,"<code>$1</code>");str=str.replace(/\[pre](.+?)\[\/pre]/g,"<code>$1</code>");
str=str.replace(/\[style (.+?)](.+?)\[\/style]/g,"<font $1>$2</font>");str=str.replace(/\[size=(.+?)](.+?)\[\/size]/g,'<span style="font-size:$1px;">$2</span>');str=str.replace(/\[color=(.+?)](.+?)\[\/color]/g,'<span style="color:$1;">$2</span>');str=str.replace(/\[url=([^]+)](.+?)\[\/url]/g,'<a href="$1">$2</a>');str=str.replace(/\[url](.+?)\[\/url]/g,'<a href="$1" target="_blank">$1</a>');str=str.replace(/\[img](.+?)\[\/img]/g,'<img src="$1" border="0">');return str}const loadWASM=(wasmUrl,imports)=>
fetch(wasmUrl).then((response)=>response.arrayBuffer()).then((bytes)=>WebAssembly.instantiate(bytes,imports));const instanciateWASM=(wasmUrl,imports)=>loadWASM(wasmUrl,imports).then((results)=>results.instance);const rangedRandom=(min,max)=>Math.random()*(max-min)+min;const gaussianRandom=()=>(Math.random()+Math.random()+Math.random()+Math.random()+Math.random()+Math.random()-3)/3;const wrapText=function(text,rect,lineHeight,textGravity,fill=true,stroke=false){const paragraphs=text.split("\n");const parLen=
paragraphs.length;const rectWidth=rect.width;let lines=[],line;let linesX=[],lineX=0;let words,len;let testLine;let metrics;let width=0;let n;for(let i=0;i<parLen;i++){words=paragraphs[i].split(" ");len=words.length;if(!len){lines.push(paragraphs[i]);linesX.push(0);continue}line=words[0];for(n=1;n<len;n++){testLine=line+" "+words[n];metrics=this.measureText(testLine);width=metrics.width;if(width>rectWidth&&n>0){lineX=rect.xMin;if(!(textGravity&G.LEFT))if(textGravity&G.RIGHT)lineX+=this.measureText(line).width-
width;else if(textGravity&G.CENTER)lineX+=(this.measureText(line).width-width)/2;lines.push(line);line=words[n];linesX.push(lineX)}else line=testLine}lineX=rect.xMin;if(!(textGravity&G.LEFT)){metrics=this.measureText(line);width=metrics.width;if(textGravity&G.RIGHT)lineX+=rectWidth-width;else if(textGravity&G.CENTER)lineX+=(rectWidth-width)/2}lines.push(line);linesX.push(lineX)}len=lines.length;let y=rect.yMin+lineHeight;if(!(textGravity&G.TOP))if(textGravity&G.BOTTOM)y=rect.yMax-lineHeight*(len-
1);else if(textGravity&G.CENTER)y+=(rect.height-lineHeight*len)/2;for(n=0;n<len;n++){if(fill)this.fillText(lines[n],linesX[n],y);if(stroke)this.strokeText(lines[n],linesX[n],y);y+=lineHeight}};export{mix,merge,loadString,loadImage,createScriptWorker,polyfill,waitForEvent,delay,textFileUserDownload,BBCodeToHTML,loadWASM,instanciateWASM,rangedRandom,gaussianRandom,wrapText};
